{"ast":null,"code":"var _jsxFileName = \"E:\\\\dasty_work_file\\\\web\\\\dastyco\\\\client\\\\src\\\\components\\\\home\\\\InputComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComment } from \"../../redux/actions/commentAction\";\nimport Icons from \"../Icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputComment = ({\n  children,\n  post,\n  onReply,\n  setOnReply\n}) => {\n  _s();\n\n  const [content, setContent] = useState(\"\");\n  const {\n    auth,\n    socket,\n    theme\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!content.trim()) {\n      if (setOnReply) {\n        return setOnReply(false);\n      }\n\n      return;\n    }\n\n    setContent(\"\");\n    const newComment = {\n      content,\n      likes: [],\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply.commentId,\n      tag: onReply && onReply.user\n    };\n    dispatch(createComment({\n      post,\n      newComment,\n      auth,\n      socket\n    }));\n\n    if (setOnReply) {\n      return setOnReply(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"comment_input\",\n    onSubmit: handleSubmit,\n    children: [children, post.comments.length == 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Write the first comment!\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add comments\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"postBtn\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputComment, \"mdTskNqcpBXRUfycre4ws/UIETw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = InputComment;\nexport default InputComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputComment\");","map":{"version":3,"sources":["E:/dasty_work_file/web/dastyco/client/src/components/home/InputComment.js"],"names":["React","useState","useDispatch","useSelector","createComment","Icons","InputComment","children","post","onReply","setOnReply","content","setContent","auth","socket","theme","state","dispatch","handleSubmit","e","preventDefault","trim","newComment","likes","user","createdAt","Date","toISOString","reply","commentId","tag","comments","length","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAA6C;AAAA;;AAChE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA0BZ,WAAW,CAAEa,KAAD,IAAWA,KAAZ,CAA3C;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACT,OAAO,CAACU,IAAR,EAAL,EAAqB;AACnB,UAAIX,UAAJ,EAAgB;AACd,eAAOA,UAAU,CAAC,KAAD,CAAjB;AACD;;AACD;AACD;;AAEDE,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEA,UAAMU,UAAU,GAAG;AACjBX,MAAAA,OADiB;AAEjBY,MAAAA,KAAK,EAAE,EAFU;AAGjBC,MAAAA,IAAI,EAAEX,IAAI,CAACW,IAHM;AAIjBC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJM;AAKjBC,MAAAA,KAAK,EAAEnB,OAAO,IAAIA,OAAO,CAACoB,SALT;AAMjBC,MAAAA,GAAG,EAAErB,OAAO,IAAIA,OAAO,CAACe;AANP,KAAnB;AAQAP,IAAAA,QAAQ,CAACb,aAAa,CAAC;AAAEI,MAAAA,IAAF;AAAQc,MAAAA,UAAR;AAAoBT,MAAAA,IAApB;AAA0BC,MAAAA;AAA1B,KAAD,CAAd,CAAR;;AACA,QAAIJ,UAAJ,EAAgB;AACd,aAAOA,UAAU,CAAC,KAAD,CAAjB;AACD;AACF,GAvBD;;AAyBA,sBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,QAAQ,EAAEQ,YAA1C;AAAA,eACGX,QADH,EAEGC,IAAI,CAACuB,QAAL,CAAcC,MAAd,IAAwB,CAAxB,gBACC;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,0BAFd;AAGE,MAAA,KAAK,EAAErB,OAHT;AAIE,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACc,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,YADD,gBAQC;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,KAAK,EAAEvB,OAHT;AAIE,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACc,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,YAVJ,eAkBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAvDD;;GAAM5B,Y;UAG4BH,W,EACfD,W;;;KAJbI,Y;AAyDN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createComment } from \"../../redux/actions/commentAction\";\r\nimport Icons from \"../Icons\";\r\n\r\nconst InputComment = ({ children, post, onReply, setOnReply }) => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { auth, socket, theme } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!content.trim()) {\r\n      if (setOnReply) {\r\n        return setOnReply(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    setContent(\"\");\r\n\r\n    const newComment = {\r\n      content,\r\n      likes: [],\r\n      user: auth.user,\r\n      createdAt: new Date().toISOString(),\r\n      reply: onReply && onReply.commentId,\r\n      tag: onReply && onReply.user,\r\n    };\r\n    dispatch(createComment({ post, newComment, auth, socket }));\r\n    if (setOnReply) {\r\n      return setOnReply(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"comment_input\" onSubmit={handleSubmit}>\r\n      {children}\r\n      {post.comments.length == 0 ? (\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Write the first comment!\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n      ) : (\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add comments\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n      )}\r\n\r\n      <button type=\"submit\" className=\"postBtn\">\r\n        Post\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputComment;\r\n"]},"metadata":{},"sourceType":"module"}