{"ast":null,"code":"import { GLOBALTYPES } from \"./globalTypes\";\nimport { getDataAPI, deleteDataAPI } from \"../../utils/fetchData\";\nimport { createNotify } from \"./notifyAction\";\nexport const ADMIN_TYPES = {\n  GET_TOTAL_USERS: \"GET_TOTAL_USERS\",\n  GET_TOTAL_POSTS: \"GET_TOTAL_POSTS\",\n  GET_TOTAL_COMMENTS: \"GET_TOTAL_COMMENTS\",\n  GET_TOTAL_LIKES: \"GET_TOTAL_LIKES\",\n  GET_TOTAL_LIKELEFTS: \"GET_TOTAL_LIKELEFTS\",\n  GET_TOTAL_LIKERIGHTS: \"GET_TOTAL_LIKERIGHTS\",\n  GET_TOTAL_SPAM_POSTS: \"GET_TOTAL_SPAM_POSTS\",\n  GET_TOTAL_ACTIVE_USERS: \"GET_TOTAL_ACTIVE_USERS\",\n  GET_SPAM_POSTS: \"GET_SPAM_POSTS\",\n  LOADING_ADMIN: \"LOADING_ADMIN\",\n  DELETE_POST: \"DELETE_POST\"\n};\nexport const getTotalUsers = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_users\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_USERS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalPosts = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_posts\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_POSTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalComments = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_comments\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_COMMENTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalLikes = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_likes\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_LIKES,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalLikerights = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_likerights\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_LIKERIGHTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalLikelefts = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_likelefts\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_LIKELEFTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalSpamPosts = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_total_spam_posts\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_TOTAL_SPAM_POSTS,\n      payload: res.data\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getSpamPosts = token => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: true\n    });\n    const res = await getDataAPI(\"get_spam_posts\", token);\n    dispatch({\n      type: ADMIN_TYPES.GET_SPAM_POSTS,\n      payload: res.data.spamPosts\n    });\n    dispatch({\n      type: ADMIN_TYPES.LOADING_ADMIN,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const deleteSpamPost = ({\n  post,\n  auth,\n  socket\n}) => async dispatch => {\n  dispatch({\n    type: ADMIN_TYPES.DELETE_POST,\n    payload: post\n  });\n\n  try {\n    const res = await deleteDataAPI(`delete_spam_posts/${post._id}`, auth.token);\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    }); // todo notification\n\n    const msg = {\n      id: auth.user._id,\n      text: \"Your Post is deleted due to too many reports.\",\n      recipients: [post.user._id],\n      url: `/profile/${post.user._id}`\n    };\n    dispatch(createNotify({\n      msg,\n      auth,\n      socket\n    }));\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getTotalActiveUsers = ({\n  auth,\n  socket\n}) => async dispatch => {\n  try {\n    socket.emit(\"getActiveUsers\", auth.user._id);\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["E:/dasty_work_file/web/dastyco/client/src/redux/actions/adminAction.js"],"names":["GLOBALTYPES","getDataAPI","deleteDataAPI","createNotify","ADMIN_TYPES","GET_TOTAL_USERS","GET_TOTAL_POSTS","GET_TOTAL_COMMENTS","GET_TOTAL_LIKES","GET_TOTAL_LIKELEFTS","GET_TOTAL_LIKERIGHTS","GET_TOTAL_SPAM_POSTS","GET_TOTAL_ACTIVE_USERS","GET_SPAM_POSTS","LOADING_ADMIN","DELETE_POST","getTotalUsers","token","dispatch","type","payload","res","data","err","ALERT","error","response","msg","getTotalPosts","getTotalComments","getTotalLikes","getTotalLikerights","getTotalLikelefts","getTotalSpamPosts","getSpamPosts","spamPosts","deleteSpamPost","post","auth","socket","_id","success","id","user","text","recipients","url","getTotalActiveUsers","emit"],"mappings":"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","sourcesContent":["import { GLOBALTYPES } from \"./globalTypes\";\r\nimport { getDataAPI, deleteDataAPI } from \"../../utils/fetchData\";\r\nimport { createNotify } from \"./notifyAction\";\r\n\r\nexport const ADMIN_TYPES = {\r\n  GET_TOTAL_USERS: \"GET_TOTAL_USERS\",\r\n  GET_TOTAL_POSTS: \"GET_TOTAL_POSTS\",\r\n  GET_TOTAL_COMMENTS: \"GET_TOTAL_COMMENTS\",\r\n  GET_TOTAL_LIKES: \"GET_TOTAL_LIKES\",\r\n  GET_TOTAL_LIKELEFTS: \"GET_TOTAL_LIKELEFTS\",\r\n  GET_TOTAL_LIKERIGHTS: \"GET_TOTAL_LIKERIGHTS\",\r\n  GET_TOTAL_SPAM_POSTS: \"GET_TOTAL_SPAM_POSTS\",\r\n  GET_TOTAL_ACTIVE_USERS: \"GET_TOTAL_ACTIVE_USERS\",\r\n  GET_SPAM_POSTS: \"GET_SPAM_POSTS\",\r\n  LOADING_ADMIN: \"LOADING_ADMIN\",\r\n  DELETE_POST: \"DELETE_POST\",\r\n};\r\n\r\nexport const getTotalUsers = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_users\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_USERS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalPosts = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_posts\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_POSTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalComments = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_comments\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_COMMENTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalLikes = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_likes\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_LIKES, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalLikerights = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_likerights\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_LIKERIGHTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalLikelefts = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_likelefts\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_LIKELEFTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalSpamPosts = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_total_spam_posts\", token);\r\n    dispatch({ type: ADMIN_TYPES.GET_TOTAL_SPAM_POSTS, payload: res.data });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getSpamPosts = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: true });\r\n    const res = await getDataAPI(\"get_spam_posts\", token);\r\n\r\n    dispatch({ type: ADMIN_TYPES.GET_SPAM_POSTS, payload: res.data.spamPosts });\r\n\r\n    dispatch({ type: ADMIN_TYPES.LOADING_ADMIN, payload: false });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteSpamPost = ({ post, auth, socket }) => async (dispatch) => {\r\n  dispatch({ type: ADMIN_TYPES.DELETE_POST, payload: post });\r\n\r\n  try {\r\n    const res = await deleteDataAPI(\r\n      `delete_spam_posts/${post._id}`,\r\n      auth.token\r\n    );\r\n\r\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } });\r\n\r\n    // todo notification\r\n    const msg = {\r\n      id: auth.user._id,\r\n      text: \"Your Post is deleted due to too many reports.\",\r\n      recipients: [post.user._id],\r\n      url: `/profile/${post.user._id}`,\r\n    };\r\n\r\n    dispatch(createNotify({ msg, auth, socket }));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTotalActiveUsers = ({ auth, socket }) => async (dispatch) => {\r\n  try {\r\n    socket.emit(\"getActiveUsers\", auth.user._id);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GLOBALTYPES.ALERT,\r\n      payload: {\r\n        error: err.response.data.msg,\r\n      },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}