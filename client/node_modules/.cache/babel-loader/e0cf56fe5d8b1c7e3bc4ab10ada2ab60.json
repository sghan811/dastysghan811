{"ast":null,"code":"var _jsxFileName = \"E:\\\\dasty_work_file\\\\web\\\\dastyco\\\\client\\\\src\\\\components\\\\profile\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PostThumb from \"../PostThumb\";\nimport LoadIcon from \"../../images/loading.gif\";\nimport LoadMoreBtn from \"../LoadMoreBtn\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport { PROFILE_TYPES } from \"../../redux/actions/profileAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = ({\n  auth,\n  profile,\n  dispatch,\n  id\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [result, setResult] = useState(9);\n  const [page, setPage] = useState(0);\n  const [load, setLoad] = useState(false);\n  useEffect(() => {\n    profile.posts.forEach(data => {\n      if (data._id === id) {\n        setPosts(data.posts);\n        setResult(data.result);\n        setPage(data.page);\n      }\n    });\n  }, [profile.posts, id]);\n\n  const handleLoadMore = async () => {\n    setLoad(true);\n    const res = await getDataAPI(`user_posts/${id}?limit=${page * 9}`, auth.token);\n    const newData = { ...res.data,\n      page: page + 1,\n      _id: id\n    };\n    dispatch({\n      type: PROFILE_TYPES.UPDATE_POST,\n      payload: newData\n    });\n    setLoad(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostThumb, {\n      posts: posts,\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), load && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: LoadIcon,\n      alt: \"Loading...\",\n      className: \"d-block mx-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n      result: result,\n      page: page,\n      load: load,\n      handleLoadMore: handleLoadMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"wOVqsjQmWpn6RchhlEUAUCAkq0g=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["E:/dasty_work_file/web/dastyco/client/src/components/profile/Posts.js"],"names":["React","useState","useEffect","PostThumb","LoadIcon","LoadMoreBtn","getDataAPI","PROFILE_TYPES","Posts","auth","profile","dispatch","id","posts","setPosts","result","setResult","page","setPage","load","setLoad","forEach","data","_id","handleLoadMore","res","token","newData","type","UPDATE_POST","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAAqC;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACG,KAAR,CAAcQ,OAAd,CAAuBC,IAAD,IAAU;AAC9B,UAAIA,IAAI,CAACC,GAAL,KAAaX,EAAjB,EAAqB;AACnBE,QAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACAG,QAAAA,SAAS,CAACM,IAAI,CAACP,MAAN,CAAT;AACAG,QAAAA,OAAO,CAACI,IAAI,CAACL,IAAN,CAAP;AACD;AACF,KAND;AAOD,GARQ,EAQN,CAACP,OAAO,CAACG,KAAT,EAAgBD,EAAhB,CARM,CAAT;;AAUA,QAAMY,cAAc,GAAG,YAAY;AACjCJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMK,GAAG,GAAG,MAAMnB,UAAU,CACzB,cAAaM,EAAG,UAASK,IAAI,GAAG,CAAE,EADT,EAE1BR,IAAI,CAACiB,KAFqB,CAA5B;AAIA,UAAMC,OAAO,GAAG,EAAE,GAAGF,GAAG,CAACH,IAAT;AAAeL,MAAAA,IAAI,EAAEA,IAAI,GAAG,CAA5B;AAA+BM,MAAAA,GAAG,EAAEX;AAApC,KAAhB;AACAD,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAErB,aAAa,CAACsB,WAAtB;AAAmCC,MAAAA,OAAO,EAAEH;AAA5C,KAAD,CAAR;AACAP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GATD;;AAUA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEP,KAAlB;AAAyB,MAAA,MAAM,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,EAGGI,IAAI,iBACH;AAAK,MAAA,GAAG,EAAEf,QAAV;AAAoB,MAAA,GAAG,EAAC,YAAxB;AAAqC,MAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOE,QAAC,WAAD;AACE,MAAA,MAAM,EAAEW,MADV;AAEE,MAAA,IAAI,EAAEE,IAFR;AAGE,MAAA,IAAI,EAAEE,IAHR;AAIE,MAAA,cAAc,EAAEK;AAJlB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1CD;;GAAMhB,K;;KAAAA,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PostThumb from \"../PostThumb\";\r\nimport LoadIcon from \"../../images/loading.gif\";\r\nimport LoadMoreBtn from \"../LoadMoreBtn\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { PROFILE_TYPES } from \"../../redux/actions/profileAction\";\r\n\r\nconst Posts = ({ auth, profile, dispatch, id }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [result, setResult] = useState(9);\r\n  const [page, setPage] = useState(0);\r\n  const [load, setLoad] = useState(false);\r\n\r\n  useEffect(() => {\r\n    profile.posts.forEach((data) => {\r\n      if (data._id === id) {\r\n        setPosts(data.posts);\r\n        setResult(data.result);\r\n        setPage(data.page);\r\n      }\r\n    });\r\n  }, [profile.posts, id]);\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true);\r\n    const res = await getDataAPI(\r\n      `user_posts/${id}?limit=${page * 9}`,\r\n      auth.token\r\n    );\r\n    const newData = { ...res.data, page: page + 1, _id: id };\r\n    dispatch({ type: PROFILE_TYPES.UPDATE_POST, payload: newData });\r\n    setLoad(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <PostThumb posts={posts} result={result} />\r\n\r\n      {load && (\r\n        <img src={LoadIcon} alt=\"Loading...\" className=\"d-block mx-auto\" />\r\n      )}\r\n\r\n      <LoadMoreBtn\r\n        result={result}\r\n        page={page}\r\n        load={load}\r\n        handleLoadMore={handleLoadMore}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}