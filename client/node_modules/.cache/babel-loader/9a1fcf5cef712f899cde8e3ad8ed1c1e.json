{"ast":null,"code":"export const checkImage = file => {\n  let err = \"\";\n\n  if (!file) {\n    return err = \"File does not exist.\";\n  } //?1 mb\n\n\n  if (file.size > 1024 * 1024) {\n    return err = \"File size must be less than 1 Mb.\";\n  }\n\n  if (file.type !== \"image/jpeg\" && file.type !== \"image/png\") {\n    return err = \"Image must be jpeg or png.\";\n  }\n\n  return err;\n};\nexport const imageUpload = async images => {\n  let imgArr = [];\n\n  for (const item of images) {\n    const formData = new FormData();\n\n    if (item.camera) {\n      formData.append(\"file\", item.camera);\n    } else {\n      formData.append(\"file\", item);\n    }\n\n    formData.append(\"upload_preset\", \"fmc65grm\");\n    formData.append(\"cloud_name\", \"djsdo6rks\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/djsdo6rks/image/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    imgArr.push({\n      public_id: data.public_id,\n      url: data.secure_url\n    });\n  }\n\n  return imgArr;\n};","map":{"version":3,"sources":["E:/dasty_work_file/web/dastyco/client/src/utils/imageUpload.js"],"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","res","fetch","method","body","data","json","push","public_id","url","secure_url"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAD,IAAU;AAClC,MAAIC,GAAG,GAAG,EAAV;;AACA,MAAI,CAACD,IAAL,EAAW;AACT,WAAQC,GAAG,GAAG,sBAAd;AACD,GAJiC,CAKlC;;;AACA,MAAID,IAAI,CAACE,IAAL,GAAY,OAAO,IAAvB,EAA6B;AAC3B,WAAQD,GAAG,GAAG,mCAAd;AACD;;AAED,MAAID,IAAI,CAACG,IAAL,KAAc,YAAd,IAA8BH,IAAI,CAACG,IAAL,KAAc,WAAhD,EAA6D;AAC3D,WAAQF,GAAG,GAAG,4BAAd;AACD;;AAED,SAAOA,GAAP;AACD,CAfM;AAiBP,OAAO,MAAMG,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAC3C,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,IAAX,IAAmBF,MAAnB,EAA2B;AACzB,UAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,QAAIF,IAAI,CAACG,MAAT,EAAiB;AACfF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAI,CAACG,MAA7B;AACD,KAFD,MAEO;AACLF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACD;;AAEDC,IAAAA,QAAQ,CAACG,MAAT,CAAgB,eAAhB,EAAiC,UAAjC;AACAH,IAAAA,QAAQ,CAACG,MAAT,CAAgB,YAAhB,EAA8B,WAA9B;AAEA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,wDADqB,EAErB;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,IAAI,EAAEP;AAFR,KAFqB,CAAvB;AAQA,UAAMQ,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAX,IAAAA,MAAM,CAACY,IAAP,CAAY;AAAEC,MAAAA,SAAS,EAAEH,IAAI,CAACG,SAAlB;AAA6BC,MAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAvC,KAAZ;AACD;;AACD,SAAOf,MAAP;AACD,CA1BM","sourcesContent":["export const checkImage = (file) => {\r\n  let err = \"\";\r\n  if (!file) {\r\n    return (err = \"File does not exist.\");\r\n  }\r\n  //?1 mb\r\n  if (file.size > 1024 * 1024) {\r\n    return (err = \"File size must be less than 1 Mb.\");\r\n  }\r\n\r\n  if (file.type !== \"image/jpeg\" && file.type !== \"image/png\") {\r\n    return (err = \"Image must be jpeg or png.\");\r\n  }\r\n\r\n  return err;\r\n};\r\n\r\nexport const imageUpload = async (images) => {\r\n  let imgArr = [];\r\n  for (const item of images) {\r\n    const formData = new FormData();\r\n\r\n    if (item.camera) {\r\n      formData.append(\"file\", item.camera);\r\n    } else {\r\n      formData.append(\"file\", item);\r\n    }\r\n\r\n    formData.append(\"upload_preset\", \"fmc65grm\");\r\n    formData.append(\"cloud_name\", \"djsdo6rks\");\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/djsdo6rks/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: formData,\r\n      }\r\n    );\r\n\r\n    const data = await res.json();\r\n    imgArr.push({ public_id: data.public_id, url: data.secure_url });\r\n  }\r\n  return imgArr;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}