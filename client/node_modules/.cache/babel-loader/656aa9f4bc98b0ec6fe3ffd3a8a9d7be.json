{"ast":null,"code":"var _jsxFileName = \"E:\\\\dasty_work_file\\\\web\\\\dastyco\\\\client\\\\src\\\\components\\\\MessageBtn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { follow, unfollow } from \"../redux/actions/profileAction\";\nimport { GLOBALTYPES } from \"./../redux/actions/globalTypes\";\nimport { addUser, getConversations } from \"./../redux/actions/messageAction\";\nimport { getDataAPI } from \"./../utils/fetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MessageBtn = ({\n  user\n}) => {\n  _s();\n\n  const [followed, setFollowed] = useState(false);\n  const {\n    auth,\n    profile,\n    socket\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  useEffect(() => {\n    if (auth.user.following.find(item => item._id === user._id)) {\n      setFollowed(true);\n    }\n\n    return () => setFollowed(false);\n  }, [auth.user.following, user._id]);\n  const {\n    message\n  } = useSelector(state => state);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const pageEnd = useRef();\n  const [page, setPage] = useState(0);\n  const [search, setSearch] = useState(\"\");\n  const [searchUsers, setSearchUsers] = useState([]);\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!search) return setSearchUsers([]);\n\n    try {\n      const res = await getDataAPI(`search?username=${search}`, auth.token);\n      setSearchUsers(res.data.users);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n\n  const handleAddUser = user => {\n    setSearch(\"\");\n    setSearchUsers([]);\n    dispatch(addUser({\n      user,\n      message\n    }));\n    return history.push(`/message/${user._id}`);\n  };\n\n  const isActive = user => {\n    if (id === user._id) return \"active\";\n    return \"\";\n  };\n\n  useEffect(() => {\n    if (message.firstLoad) return;\n    dispatch(getConversations({\n      auth\n    }));\n  }, [dispatch, auth, message.firstLoad]);\n  useEffect(() => {\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\n      dispatch(getConversations({\n        auth,\n        page\n      }));\n    }\n  }, [message.resultUsers, page, auth, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddUser(user),\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/message/${user._id}`,\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MessageBtn, \"BCsikYbCHGb1A1eb5fGlHHFOU+A=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useHistory, useParams];\n});\n\n_c = MessageBtn;\nexport default MessageBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBtn\");","map":{"version":3,"sources":["E:/dasty_work_file/web/dastyco/client/src/components/MessageBtn.js"],"names":["React","useState","useEffect","useRef","useHistory","useParams","useDispatch","useSelector","follow","unfollow","GLOBALTYPES","addUser","getConversations","getDataAPI","MessageBtn","user","followed","setFollowed","auth","profile","socket","state","dispatch","load","setLoad","following","find","item","_id","message","history","id","pageEnd","page","setPage","search","setSearch","searchUsers","setSearchUsers","handleSearch","e","preventDefault","res","token","data","users","err","type","ALERT","payload","error","response","msg","handleAddUser","push","isActive","firstLoad","resultUsers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { follow, unfollow } from \"../redux/actions/profileAction\";\r\nimport { GLOBALTYPES } from \"./../redux/actions/globalTypes\";\r\nimport { addUser, getConversations } from \"./../redux/actions/messageAction\";\r\nimport { getDataAPI } from \"./../utils/fetchData\";\r\n\r\nconst MessageBtn = ({ user }) => {\r\n  const [followed, setFollowed] = useState(false);\r\n\r\n  const { auth, profile, socket } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [load, setLoad] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (auth.user.following.find((item) => item._id === user._id)) {\r\n      setFollowed(true);\r\n    }\r\n    return () => setFollowed(false);\r\n  }, [auth.user.following, user._id]);\r\n\r\n  const { message } = useSelector((state) => state);\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const pageEnd = useRef();\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchUsers, setSearchUsers] = useState([]);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (!search) return setSearchUsers([]);\r\n\r\n    try {\r\n      const res = await getDataAPI(`search?username=${search}`, auth.token);\r\n      setSearchUsers(res.data.users);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GLOBALTYPES.ALERT,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddUser = (user) => {\r\n    setSearch(\"\");\r\n    setSearchUsers([]);\r\n    dispatch(addUser({ user, message }));\r\n    return history.push(`/message/${user._id}`);\r\n  };\r\n\r\n  const isActive = (user) => {\r\n    if (id === user._id) return \"active\";\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) return;\r\n    dispatch(getConversations({ auth }));\r\n  }, [dispatch, auth, message.firstLoad]);\r\n\r\n  useEffect(() => {\r\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n      dispatch(getConversations({ auth, page }));\r\n    }\r\n  }, [message.resultUsers, page, auth, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => handleAddUser(user)} className=\"\">\r\n        <a href={`/message/${user._id}`}>Message</a>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageBtn;\r\n"]},"metadata":{},"sourceType":"module"}